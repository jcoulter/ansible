---
- name: Create a nextcloud network
  docker_network:
    name: nextcloud_network

# - name: Create a nextcloud_html if it does not exist
#   ansible.builtin.file:
#     path: "{{ nc_html_path }}"
#     state: directory
#     mode: '0755'
#     group: users

# - name: Create a nextcloud_db if it does not exist
#   ansible.builtin.file:
#     path: "{{ nc_db_path }}"
#     state: directory
#     mode: '0755'
#     group: users

- name: Make sure - "NextCloud container is created and running {{ nc_html_path }}"
  docker_container:
    container_default_behavior: compatibility
    networks_cli_compatible: yes
    name: nextcloud
    image: nextcloud:latest
    restart_policy: unless-stopped
    published_ports:
      - "8080:80"
    pull: yes
    state: 'started'
    env:
      "MYSQL_HOST": nextcloud-maria-db
      "MYSQL_DATABASE": nextcloud
      "MYSQL_USER": nextcloud
      "MYSQL_PASSWORD": "{{ mariadb_password }}"
      "REDIS_HOST": nextcloud-redis
    networks: 
      - name: nextcloud_network
    volumes:
      - "{{ nc_html_path }}:/var/www/html"

- name: Make sure the Redis container is created and running
  docker_container:
    container_default_behavior: compatibility
    networks_cli_compatible: yes
    name: "nextcloud-redis"
    networks:
      - name: nextcloud_network
    image: "redis:alpine"
    pull: yes
    state: 'started'
    restart_policy: unless-stopped

- name: "Make sure - Nextcloud MariaDB container is created and running"
  docker_container:
    name: "nextcloud-maria-db"
    image: mariadb:latest
    pull: yes
    state: 'started'
    networks:
      - name: nextcloud_network
    volumes:
      # - /docker/mariadb/my.cnf:/etc/mysql/my.cnf:ro
      - "{{ nc_db_path }}:/var/lib/mysql"
      - /etc/localtime:/etc/localtime:ro
    env:
      "MYSQL_DATABASE": nextcloud
      "MYSQL_USER": nextcloud
      "MYSQL_PASSWORD": "{{ mariadb_password }}"
      "MYSQL_ROOT_PASSWORD": "{{ mariadb_password }}"
    restart_policy: unless-stopped


- name: Schedule a Nextcloud library scan at midnight every day
  cron:
    name: Scan the Nextcloud library
    hour: "0"
    minute: "0"
    job: "docker exec nextcloud sudo -u abc php8 /config/www/nextcloud/occ files:scan --all"

---
- name: Create a nextcloud network
  docker_network:
    name: nextcloud_network

# - name: Create a nextcloud_html if it does not exist
#   ansible.builtin.file:
#     path: "/mnt/nextcloud/html"
#     state: directory
#     mode: '0755'
#     group: docker

# - name: Create a nextcloud_db if it does not exist
#   ansible.builtin.file:
#     path: "/mnt/nextcloud/db"
#     state: directory
#     mode: '0755'
#     group: docker

# - name: Create a nextcloud db volume
#   become: yes
#   docker_volume:
#     name: nextcloud
#     driver_options:
#       type: cifs
#       device: "//192.168.1.54/nextcloud/data"
#       # fstype: cifs
#       o: "username={{ samba_username }},password={{ samba_password }},noserverino,file_mode=0777,dir_mode=0777,vers=1.0"

  # ansible.posix.mount:
    # src: "{{ uri }}"
    # path: "{{ nc_mountpoint }}"
    #  state: mounted
  # --driver local \
  # --opt type=cifs \
  # --opt device=//uxxxxx.your-server.de/backup \
  # --opt o=addr=uxxxxx.your-server.de,username=uxxxxxxx,password=*****,file_mode=0777,dir_mode=0777 \
  # --name cif-volume

- name: Make sure - NextCloud container is created and running
  docker_container:
    container_default_behavior: compatibility
    networks_cli_compatible: yes
    name: nextcloud
    image: nextcloud:latest
    published_ports:
      - "80:80"
  #   # image: "ghcr.io/linuxserver/nextcloud:php8"
    pull: yes
    state: 'started'
    env:
      "MYSQL_HOST": db
      "MYSQL_DATABASE": nextcloud
      "MYSQL_USER": nextcloud
      "MYSQL_PASSWORD": nextcloud
    networks: 
      - name: nextcloud_network
    volumes:
      - "{{ nc_html_path }}:/var/www/html"
    restart_policy: unless-stopped


# - name: Make sure the Redis container is created and running
#   docker_container:
#     container_default_behavior: compatibility
#     networks_cli_compatible: yes
#     name: "nextcloud-redis"
#     networks:
#       - name: nextcloud_network
#     image: "redis:alpine"
#     pull: yes
#     state: 'started'
#     restart_policy: unless-stopped
 
- name: Make sure - MariaDB container is created and running
  become: yes
  docker_container:
    container_default_behavior: compatibility
    networks_cli_compatible: yes
    name: "nextcloud-maria-db"
    image: "mariadb:latest"
    pull: yes
    state: 'started'
    capabilities:
      - SYS_ADMIN
      - DAC_READ_SEARCH
    networks:
      - name: nextcloud_network
    volumes:
      - "./nextcloud_db:/var/lib/mysql"
      - /etc/localtime:/etc/localtime:ro
    env:
      "MYSQL_DATABASE": nextcloud
      "MYSQL_USER": nextcloud
      "MYSQL_PASSWORD": nextcloud
      "MYSQL_ROOT_PASSWORD": nextcloud
    restart_policy: unless-stopped


# - name: Schedule a Nextcloud library scan at midnight every day
#   cron:
#     name: Scan the Nextcloud library
#     hour: "0"
#     minute: "0"
#     job: "docker exec nextcloud sudo -u abc php8 /config/www/nextcloud/occ files:scan --all"
